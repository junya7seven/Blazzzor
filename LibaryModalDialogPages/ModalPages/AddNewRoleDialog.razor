@inject ISnackbar Snackbar
@inject HttpClient httpClient


<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Outlined.PeopleAlt" Color="Color.Success" Class="mr-3 mb-n1" />
            Создание новой роли
        </MudText>
    </TitleContent>
    <DialogContent>
            <MudTextField @bind-Value="RoleName" Label="Имя роли" Required="true" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Отменить</MudButton>
        <MudButton Color="Color.Success" OnClick="AddRole">Добавить</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    public string RoleName { get; set; }
    private ErrorResponse errorResponse;


    private void Cancel() => MudDialog.Cancel();

    private async Task AddRole()
    {
        try
        {
            if (!string.IsNullOrEmpty(RoleName) && !new RegularExpressionAttribute(@"^[a-zA-Zа-яА-Я0-9]+$").IsValid(RoleName))
            {
                Snackbar.Add($"Роль должна содержать только a-zA-Zа-яА-Я0-9 ", Severity.Error);
                MudDialog.Close(DialogResult.Ok(RoleName));
                return;
            }
            var response = await httpClient.PostAsync($"UserRole/{RoleName}", null);

            if (response.IsSuccessStatusCode)
            {
                Snackbar.Add("Роль успешно добавлена!", Severity.Success);
                StateHasChanged();
                MudDialog.Close(DialogResult.Ok(RoleName));
            }
            else
            {
                errorResponse = await response.Content.ReadFromJsonAsync<ErrorResponse>();
                Snackbar.Add($"Ошибка создания роли: {errorResponse.ErrorMessage}", Severity.Error);
                MudDialog.Close(DialogResult.Ok(RoleName));
            }
        }
        catch (HttpRequestException ex)
        {
            Snackbar.Add($"Ошибка сети: {ex.Message}", Severity.Error);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Произошла ошибка: {ex.Message}", Severity.Error);
        }
    }
}

