@page "/users"
@using Microsoft.AspNetCore.Authorization
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@inject IMapper Mapper
<PageTitle>Пользователи</PageTitle>


<h1>Пользователи</h1>
@if(isError)
{
    <MudAlert Severity="Severity.Error" Variant="Variant.Outlined">Произошла ошибка: @ErrorMessage</MudAlert>
}
<MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="AddNewUserAsync">Добавить пользователя</MudButton>
<MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="AddNewRoleAsync">Добавить новую роль</MudButton>
<MudStack Direction="Row" AlignItems="AlignItems.Center">
    <!-- MudSelect -->
    <MudSelect @bind-Value="stringValue" Label="Select Role" HelperText="Filter by Role" Placeholder="Please Select">
        <MudSelectItem Value="@("Убрать роли")">Убрать роли</MudSelectItem>
        @if (Roles != null && Roles.Any())
        {
            @foreach (var role in Roles)
            {
                <MudSelectItem Value="@role.NormalName">@role.NormalName</MudSelectItem>
            }
        }
    </MudSelect>

    <MudTextField @bind-Value="searchQuery" Placeholder="Search by name or email" Immediate="true"
                  Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search"
                  OnKeyUp="SearchUsers" />
</MudStack>


<MudTable Items="@users" ServerData="LoadServerData" @ref="table">
    <HeaderContent>
        @foreach (var item in userProp)
        {
            <MudTh Style="cursor:pointer" @onclick="() => SortTableByColumn(item)">
                @columnHeaders[item]
            </MudTh>
        }
        <MudTh>Роли</MudTh>
        <MudTh>Редактировать</MudTh>
        <MudTh>Заблокировать</MudTh>
    </HeaderContent>
    <RowTemplate Context="rowContext">
        @if (rowContext == null)
        {
            <p>Данные отсутствуют</p>
        }
        else{
            @foreach (var prop in userProp)
            {
                <MudTd DataLabel="@columnHeaders[prop]">
                    @rowContext.GetType().GetProperty(prop)?.GetValue(rowContext)?.ToString()
                </MudTd>
            }
        }
        <MudTd DataLabel="Роли">
            <MudIcon Style="cursor:pointer" @onclick="@(() => ViewUserRolesAsync(rowContext))" Icon="@Icons.Material.Outlined.PeopleAlt" Title="Просмотр ролей" />
        </MudTd>
        <MudTd DataLabel="Редактировать">
            <MudIcon Style="cursor:pointer" @onclick="@(() => UpdateUserAsync(rowContext))" Icon="@Icons.Material.Filled.Edit" Title="Редактирование" />
        </MudTd>
        <MudTd DataLabel="Заблокировать">
            <MudIcon Style="cursor:pointer" @onclick="@(() => BlockUserAsync(rowContext))" Icon="@Icons.Material.Filled.Block" Title="Блокировка" />
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>




