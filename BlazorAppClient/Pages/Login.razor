@page "/Registration"
@inject ISnackbar Snackbar
@inject HttpClient httpClient
@inject NavigationManager NavigationManager


<PageTitle>Login</PageTitle>

<h1>Login</h1>

<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Почта" HelperText="Введите почту"
                                  @bind-Value="model.Email" For="@(() => model.Email)" />
                    
                    <MudTextField Label="Пароль" HelperText="Введите пароль" Class="mt-3"
                                  @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Войти</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
        <MudItem xs="12" sm="5">
            <MudPaper Class="pa-4 mud-height-full">
                <MudText Typo="Typo.subtitle2">Validation Summary</MudText>
                @if (success)
                {
                    <MudText Color="Color.Success">Success</MudText>
                }
                else
                {
                    <MudText Color="@Color.Error">
                        <ValidationSummary />
                    </MudText>
                }
            </MudPaper>
        </MudItem>
    </MudGrid>
</EditForm>


@code {
    LoginUser model = new LoginUser();
    bool success;

    private void OnValidSubmit(EditContext context)
    {

        success = true;
        StateHasChanged();
    }

}